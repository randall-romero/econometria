Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "C:\ProgramData\Anaconda3\lib\asyncio\base_events.py", line 642, in run_until_complete
    return future.result()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
plt.style.use('seaborn-dark')

np.random.seed(2021)

T = 60 # horizonte
n = 100 # cantidad de simulaciones

ùúñ = pd.DataFrame(np.random.randn(T+1, n)) # ruido blanco
y = ùúñ.cumsum(axis=0)  # caminatas aleatorias


fig = plt.figure(figsize=(14, 8))
gs = fig.add_gridspec(5, 2,  width_ratios=(6, 2),
                      left=0.1, right=0.9, bottom=0.1, top=0.9,
                      wspace=0.05, hspace=0.05)

# -----------Graficar las simulaciones
ax = fig.add_subplot(gs[:, 0])
y.plot(color='RoyalBlue', alpha=0.1, legend=False, ax=ax)
ax.axhline(0, color='white');
ax.set(title=f'{n} caminatas aleatorias',ylim=[-25,25])

# -----------Histogramas
ax_last = None
for i in range(5):
    ax_last = fig.add_subplot(gs[i, 1], sharex= ax_last)
    y.loc[15*i].hist(ax=ax_last, color='RoyalBlue', alpha=0.8)
    if i==0:
        ax_last.set(title='Histogramas',xlim=[-25,25])

    ax_last.set_yticks([])
    ax_last.annotate(f't ={15*i}', (0.1, 0.8), xycoords='axes fraction')
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mTypeError[0m                                 Traceback (most recent call last)
[1;32m~\AppData\Local\Temp/ipykernel_6348/649438951.py[0m in [0;36m<module>[1;34m[0m
[0;32m     17[0m [1;31m# -----------Graficar las simulaciones[0m[1;33m[0m[1;33m[0m[0m
[0;32m     18[0m [0max[0m [1;33m=[0m [0mfig[0m[1;33m.[0m[0madd_subplot[0m[1;33m([0m[0mgs[0m[1;33m[[0m[1;33m:[0m[1;33m,[0m [1;36m0[0m[1;33m][0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 19[1;33m [0my[0m[1;33m.[0m[0mplot[0m[1;33m([0m[0mcolor[0m[1;33m=[0m[1;34m'RoyalBlue'[0m[1;33m,[0m [0malpha[0m[1;33m=[0m[1;36m0.1[0m[1;33m,[0m [0mlegend[0m[1;33m=[0m[1;32mFalse[0m[1;33m,[0m [0max[0m[1;33m=[0m[0max[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     20[0m [0max[0m[1;33m.[0m[0maxhline[0m[1;33m([0m[1;36m0[0m[1;33m,[0m [0mcolor[0m[1;33m=[0m[1;34m'white'[0m[1;33m)[0m[1;33m;[0m[1;33m[0m[1;33m[0m[0m
[0;32m     21[0m [0max[0m[1;33m.[0m[0mset[0m[1;33m([0m[0mtitle[0m[1;33m=[0m[1;34mf'{n} caminatas aleatorias'[0m[1;33m,[0m[0mylim[0m[1;33m=[0m[1;33m[[0m[1;33m-[0m[1;36m25[0m[1;33m,[0m[1;36m25[0m[1;33m][0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\ProgramData\Anaconda3\lib\site-packages\pandas\plotting\_core.py[0m in [0;36m__call__[1;34m(self, *args, **kwargs)[0m
[0;32m    900[0m         [1;31m# when using another backend, get out of the way[0m[1;33m[0m[1;33m[0m[0m
[0;32m    901[0m         [1;32mif[0m [0mplot_backend[0m[1;33m.[0m[0m__name__[0m [1;33m!=[0m [1;34m"pandas.plotting._matplotlib"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 902[1;33m             [1;32mreturn[0m [0mplot_backend[0m[1;33m.[0m[0mplot[0m[1;33m([0m[0mself[0m[1;33m.[0m[0m_parent[0m[1;33m,[0m [0mx[0m[1;33m=[0m[0mx[0m[1;33m,[0m [0my[0m[1;33m=[0m[0my[0m[1;33m,[0m [0mkind[0m[1;33m=[0m[0mkind[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    903[0m [1;33m[0m[0m
[0;32m    904[0m         [1;32mif[0m [0mkind[0m [1;32mnot[0m [1;32min[0m [0mself[0m[1;33m.[0m[0m_all_kinds[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\ProgramData\Anaconda3\lib\site-packages\plotly\__init__.py[0m in [0;36mplot[1;34m(data_frame, kind, **kwargs)[0m
[0;32m    100[0m         [1;32mreturn[0m [0mscatter[0m[1;33m([0m[0mdata_frame[0m[1;33m,[0m [1;33m**[0m[0mnew_kwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    101[0m     [1;32mif[0m [0mkind[0m [1;33m==[0m [1;34m"line"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 102[1;33m         [1;32mreturn[0m [0mline[0m[1;33m([0m[0mdata_frame[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    103[0m     [1;32mif[0m [0mkind[0m [1;33m==[0m [1;34m"area"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    104[0m         [1;32mreturn[0m [0marea[0m[1;33m([0m[0mdata_frame[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;31mTypeError[0m: line() got an unexpected keyword argument 'alpha'
TypeError: line() got an unexpected keyword argument 'alpha'

