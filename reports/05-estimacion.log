Traceback (most recent call last):
  File "/home/randall/anaconda3/envs/libro-ec4301/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/randall/anaconda3/envs/libro-ec4301/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/randall/anaconda3/envs/libro-ec4301/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/randall/anaconda3/envs/libro-ec4301/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/randall/anaconda3/envs/libro-ec4301/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/randall/anaconda3/envs/libro-ec4301/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/home/randall/anaconda3/envs/libro-ec4301/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/randall/anaconda3/envs/libro-ec4301/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
NSIMUL = 1000

def telara√±a_con_precios_rezagos(T=24):
    datos = telara√±a(T)
    datos['LP_maiz'] = datos['P_maiz'].shift()   # precio maiz rezagado
    datos['LP_trigo'] = datos['P_trigo'].shift() # precio trigo rezagado
    return datos

np.random.seed(123)¬∂
DATOS_SIMULADOS = pd.concat(
  [telara√±a_con_precios_rezagos() for n in range(NSIMUL)],
  keys = range(NSIMUL)
  )

def ols_params(modelo):
    return pd.DataFrame(
      [ols(modelo, df.loc[_]).fit().params
         for _, df in DATOS_SIMULADOS.groupby(level=0)]
       )

PARAMETROS_SIMULADOS = {
 'ms_ols': ols_params('Q_maiz ~ 1 + LP_maiz + LP_trigo'),
 'ws_ols': ols_params('Q_trigo ~ 1 + LP_maiz + LP_trigo'),
 'md_ols': ols_params('Q_maiz ~ 1 + P_maiz + P_trigo'),
 'wd_ols': ols_params('Q_trigo ~ 1 + P_maiz + P_trigo')
}

exogenas = ['1', 'P_maiz', 'P_trigo']
instrum = ['1', 'LP_maiz', 'LP_trigo']

def tsls_params(modelo):
    return pd.DataFrame(
        [IV2SLS(df.loc[i,modelo], df.loc[i,exogenas], df.loc[i,instrum]).fit().params
         for i, df in DATOS_SIMULADOS.groupby(level=0)])

DATOS_SIMULADOS.dropna(inplace=True)
DATOS_SIMULADOS['1'] = 1.0

PARAMETROS_SIMULADOS['md_2sls'] = tsls_params('Q_maiz')
PARAMETROS_SIMULADOS['wd_2sls'] = tsls_params('Q_trigo')



true_params = {
    'ms': np.r_[cstr[0],Beta[0]],
    'ws': np.r_[cstr[1],Beta[1]],
    'md': np.r_[cstr[2], -Gamma[2,-2:]],
    'wd': np.r_[cstr[3], -Gamma[3,-2:]]}

description = {
    'ms': 'Oferta de ma√≠z',
    'ws': 'Oferta de trigo',
    'md': 'Demanda de ma√≠z',
    'wd': 'Demanda de trigo'}

def plot_result(caso):
    simul = PARAMETROS_SIMULADOS[caso]

    fig, axs = plt.subplots(1,3,figsize=[12,3])
    true_values = true_params[caso[:2]]
    for ax, serie, xv in zip(axs, simul, true_values):
        simul[serie].hist(bins=20,ax=ax, alpha=0.75)
        ax.axvline(x=xv,linewidth=4, color='r')
        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.spines['left'].set_visible(False)
        ax.set(yticks=[], xlabel=serie)
        ax.grid(False)
    fig.suptitle(description[caso[:2]], size=16)
    return pd.DataFrame({'promedio': simul.mean(),
                         'verdadero': true_values}).round(3).T
------------------

[0;36m  File [0;32m"<ipython-input-8-12f01efdd123>"[0;36m, line [0;32m9[0m
[0;31m    np.random.seed(123)¬∂[0m
[0m                       ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid character in identifier

SyntaxError: invalid character in identifier (<ipython-input-8-12f01efdd123>, line 9)

