Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\ProgramData\Anaconda3\envs\libro-ec4301\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
componentes = ['Original', 'Tendencia','Ciclo','Estacional','Irregular']

res = seasonal_decompose(imae, model='additive', period=12, extrapolate_trend='freq')
ciclo, tendencia = hpfilter(res.trend, lamb=14400)
additive = pd.concat([res.observed,tendencia, ciclo, res.seasonal, res.resid], axis=1)

res = seasonal_decompose(imae, model='multiplicative', period=12, extrapolate_trend='freq')
ciclo, tendencia = hpfilter(np.log(res.trend), lamb=14400)
multiplicative = pd.concat([res.observed, np.exp(tendencia), np.exp(ciclo), res.seasonal, res.resid], axis=1)

descomp = pd.concat([additive, multiplicative], keys=['Aditivo', 'Multiplicativo'])
descomp.columns = componentes
descomp = descomp.stack().reset_index()
descomp.columns = ['Descomposici√≥n','Mes','Componente', 'Valor']

g = sns.FacetGrid(descomp, row="Componente", col="Descomposici√≥n",
                  sharey=False, height=3.0, aspect=2.0)
g.map_dataframe(plt.plot, "Mes", "Valor");
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mTypeError[0m                                 Traceback (most recent call last)
Input [1;32mIn [4][0m, in [0;36m<cell line: 18>[1;34m()[0m
[0;32m     14[0m descomp[38;5;241m.[39mcolumns [38;5;241m=[39m [[38;5;124m'[39m[38;5;124mDescomposici√≥n[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mMes[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mComponente[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mValor[39m[38;5;124m'[39m]
[0;32m     16[0m g [38;5;241m=[39m sns[38;5;241m.[39mFacetGrid(descomp, row[38;5;241m=[39m[38;5;124m"[39m[38;5;124mComponente[39m[38;5;124m"[39m, col[38;5;241m=[39m[38;5;124m"[39m[38;5;124mDescomposici√≥n[39m[38;5;124m"[39m,
[0;32m     17[0m                   sharey[38;5;241m=[39m[38;5;28;01mFalse[39;00m, height[38;5;241m=[39m[38;5;241m3.0[39m, aspect[38;5;241m=[39m[38;5;241m2.0[39m)
[1;32m---> 18[0m [43mg[49m[38;5;241;43m.[39;49m[43mmap_dataframe[49m[43m([49m[43mplt[49m[38;5;241;43m.[39;49m[43mplot[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mMes[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mValor[39;49m[38;5;124;43m"[39;49m[43m)[49m

File [1;32mC:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\seaborn\axisgrid.py:777[0m, in [0;36mFacetGrid.map_dataframe[1;34m(self, func, *args, **kwargs)[0m
[0;32m    774[0m     kwargs[[38;5;124m"[39m[38;5;124mdata[39m[38;5;124m"[39m] [38;5;241m=[39m data_ijk
[0;32m    776[0m     [38;5;66;03m# Draw the plot[39;00m
[1;32m--> 777[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_facet_plot[49m[43m([49m[43mfunc[49m[43m,[49m[43m [49m[43max[49m[43m,[49m[43m [49m[43margs[49m[43m,[49m[43m [49m[43mkwargs[49m[43m)[49m
[0;32m    779[0m [38;5;66;03m# For axis labels, prefer to use positional args for backcompat[39;00m
[0;32m    780[0m [38;5;66;03m# but also extract the x/y kwargs and use if no corresponding arg[39;00m
[0;32m    781[0m axis_labels [38;5;241m=[39m [kwargs[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m), kwargs[38;5;241m.[39mget([38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)]

File [1;32mC:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\seaborn\axisgrid.py:806[0m, in [0;36mFacetGrid._facet_plot[1;34m(self, func, ax, plot_args, plot_kwargs)[0m
[0;32m    804[0m     plot_args [38;5;241m=[39m []
[0;32m    805[0m     plot_kwargs[[38;5;124m"[39m[38;5;124max[39m[38;5;124m"[39m] [38;5;241m=[39m ax
[1;32m--> 806[0m func([38;5;241m*[39mplot_args, [38;5;241m*[39m[38;5;241m*[39mplot_kwargs)
[0;32m    808[0m [38;5;66;03m# Sort out the supporting information[39;00m
[0;32m    809[0m [38;5;28mself[39m[38;5;241m.[39m_update_legend_data(ax)

File [1;32mC:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\matplotlib\pyplot.py:2769[0m, in [0;36mplot[1;34m(scalex, scaley, data, *args, **kwargs)[0m
[0;32m   2767[0m [38;5;129m@_copy_docstring_and_deprecators[39m(Axes[38;5;241m.[39mplot)
[0;32m   2768[0m [38;5;28;01mdef[39;00m [38;5;21mplot[39m([38;5;241m*[39margs, scalex[38;5;241m=[39m[38;5;28;01mTrue[39;00m, scaley[38;5;241m=[39m[38;5;28;01mTrue[39;00m, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m-> 2769[0m     [38;5;28;01mreturn[39;00m gca()[38;5;241m.[39mplot(
[0;32m   2770[0m         [38;5;241m*[39margs, scalex[38;5;241m=[39mscalex, scaley[38;5;241m=[39mscaley,
[0;32m   2771[0m         [38;5;241m*[39m[38;5;241m*[39m({[38;5;124m"[39m[38;5;124mdata[39m[38;5;124m"[39m: data} [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m {}), [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32mC:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\matplotlib\axes\_axes.py:1634[0m, in [0;36mAxes.plot[1;34m(self, scalex, scaley, data, *args, **kwargs)[0m
[0;32m   1632[0m lines [38;5;241m=[39m [[38;5;241m*[39m[38;5;28mself[39m[38;5;241m.[39m_get_lines([38;5;241m*[39margs, data[38;5;241m=[39mdata, [38;5;241m*[39m[38;5;241m*[39mkwargs)]
[0;32m   1633[0m [38;5;28;01mfor[39;00m line [38;5;129;01min[39;00m lines:
[1;32m-> 1634[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43madd_line[49m[43m([49m[43mline[49m[43m)[49m
[0;32m   1635[0m [38;5;28mself[39m[38;5;241m.[39m_request_autoscale_view(scalex[38;5;241m=[39mscalex, scaley[38;5;241m=[39mscaley)
[0;32m   1636[0m [38;5;28;01mreturn[39;00m lines

File [1;32mC:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\matplotlib\axes\_base.py:2288[0m, in [0;36m_AxesBase.add_line[1;34m(self, line)[0m
[0;32m   2285[0m [38;5;28;01mif[39;00m line[38;5;241m.[39mget_clip_path() [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m   2286[0m     line[38;5;241m.[39mset_clip_path([38;5;28mself[39m[38;5;241m.[39mpatch)
[1;32m-> 2288[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_update_line_limits[49m[43m([49m[43mline[49m[43m)[49m
[0;32m   2289[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m line[38;5;241m.[39mget_label():
[0;32m   2290[0m     line[38;5;241m.[39mset_label([38;5;124mf[39m[38;5;124m'[39m[38;5;124m_child[39m[38;5;132;01m{[39;00m[38;5;28mlen[39m([38;5;28mself[39m[38;5;241m.[39m_children)[38;5;132;01m}[39;00m[38;5;124m'[39m)

File [1;32mC:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\matplotlib\axes\_base.py:2311[0m, in [0;36m_AxesBase._update_line_limits[1;34m(self, line)[0m
[0;32m   2307[0m [38;5;28;01mdef[39;00m [38;5;21m_update_line_limits[39m([38;5;28mself[39m, line):
[0;32m   2308[0m     [38;5;124;03m"""[39;00m
[0;32m   2309[0m [38;5;124;03m    Figures out the data limit of the given line, updating self.dataLim.[39;00m
[0;32m   2310[0m [38;5;124;03m    """[39;00m
[1;32m-> 2311[0m     path [38;5;241m=[39m [43mline[49m[38;5;241;43m.[39;49m[43mget_path[49m[43m([49m[43m)[49m
[0;32m   2312[0m     [38;5;28;01mif[39;00m path[38;5;241m.[39mvertices[38;5;241m.[39msize [38;5;241m==[39m [38;5;241m0[39m:
[0;32m   2313[0m         [38;5;28;01mreturn[39;00m

File [1;32mC:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\matplotlib\lines.py:999[0m, in [0;36mLine2D.get_path[1;34m(self)[0m
[0;32m    997[0m [38;5;124;03m"""Return the `~matplotlib.path.Path` associated with this line."""[39;00m
[0;32m    998[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_invalidy [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_invalidx:
[1;32m--> 999[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mrecache[49m[43m([49m[43m)[49m
[0;32m   1000[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_path

File [1;32mC:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\matplotlib\lines.py:652[0m, in [0;36mLine2D.recache[1;34m(self, always)[0m
[0;32m    650[0m [38;5;28;01mif[39;00m always [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_invalidx:
[0;32m    651[0m     xconv [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mconvert_xunits([38;5;28mself[39m[38;5;241m.[39m_xorig)
[1;32m--> 652[0m     x [38;5;241m=[39m [43m_to_unmasked_float_array[49m[43m([49m[43mxconv[49m[43m)[49m[38;5;241m.[39mravel()
[0;32m    653[0m [38;5;28;01melse[39;00m:
[0;32m    654[0m     x [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_x

File [1;32mC:\ProgramData\Anaconda3\envs\libro-ec4301\lib\site-packages\matplotlib\cbook\__init__.py:1298[0m, in [0;36m_to_unmasked_float_array[1;34m(x)[0m
[0;32m   1296[0m     [38;5;28;01mreturn[39;00m np[38;5;241m.[39mma[38;5;241m.[39masarray(x, [38;5;28mfloat[39m)[38;5;241m.[39mfilled(np[38;5;241m.[39mnan)
[0;32m   1297[0m [38;5;28;01melse[39;00m:
[1;32m-> 1298[0m     [38;5;28;01mreturn[39;00m [43mnp[49m[38;5;241;43m.[39;49m[43masarray[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[38;5;28;43mfloat[39;49m[43m)[49m

[1;31mTypeError[0m: float() argument must be a string or a number, not 'Period'
TypeError: float() argument must be a string or a number, not 'Period'

