import numpy as np
import matplotlib.pyplot as plt
plt.style.use('seaborn')
from macrodemos.demo_ARMA import ARMA
from macrodemos.common_components import merge_plots

plt.style.use('seaborn')

rho1 = lambda x: x / (1+x**2)
theta = np.linspace(-3,3, 121)

fig, ax = plt.subplots()
ax.plot(theta, rho1(theta))

ax.plot([0.5,0.5,2.0,2.0], [0,rho1(0.5), rho1(2.0), 0], ':')
ax.plot([-0.5,-0.5,-2.0,-2.0], [0,rho1(-0.5), rho1(-2.0), 0], ':')
ax.set_xticks([-2.0,-0.5,0.0,0.5, 2.0])
ax.set_yticks([-0.5,0,0.5])
ax.set_xlabel(r'$\theta$')
ax.set_ylabel(r'$\rho_1$');

modelo_ma1p = ARMA(theta=[0.8])
modelo_ma1p.sample(120)

merge_plots(
   [modelo_ma1p.plot_process(), modelo_ma1p.plot_correlogram(18)],
   cols=2,
   subplot_titles=['Realización', 'Autocorrelación'] ,
   title_text=str(modelo_ma1p),
   shared_yaxes=False
)

modelo_ma1n = ARMA(theta=[-0.8])
modelo_ma1n.sample(120)

merge_plots(
   [modelo_ma1n.plot_process(), modelo_ma1n.plot_correlogram(18)],
   cols=2,
   subplot_titles=['Realización', 'Autocorrelación'] ,
   title_text=str(modelo_ma1n),
   shared_yaxes=False
)

subplot_titles = ['Realización',
                  'Función impulso respuesta',
                  'Autocorrelación',
                  'Autocorrelación parcial']

y = ARMA(theta=[0.5, 0.5])
y.sample(120)



merge_plots(
   [y.plot_process(), y.plot_irf(24), y.plot_correlogram(18), y.plot_partial_correlogram(18)],
   cols=2,
   subplot_titles=subplot_titles,
   title_text=str(y),
   shared_xaxes=False,
   shared_yaxes=False
)

z = ARMA(theta=[-0.6, 0.3, -0.5, 0.5])
z.sample(120)

merge_plots(
   [z.plot_process(), z.plot_irf(24), z.plot_correlogram(18), z.plot_partial_correlogram(18)],
   cols=2,
   subplot_titles=subplot_titles,
   title_text=str(z),
   shared_xaxes=False,
   shared_yaxes=False
)

fig = y.plot_ma_roots()
fig.update_layout(title_text='Raíces de $z^2 + 0.5z + 0.5$')

fig = z.plot_ma_roots()
fig.update_layout(title_text='Raíces de $z^4 - 0.6z^3 + 0.3z^2 - 0.5z + 0.5$')
