Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "C:\ProgramData\Anaconda3\lib\asyncio\base_events.py", line 642, in run_until_complete
    return future.result()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
NP = pd.read_stata('datos/NelsonPlosserData.dta', index_col='year')
NP.index = NP.index.year

def ZivotAndrewsA(serie, k=8):
    dta = NP[[serie]].dropna()
    dta.rename(columns={serie:'y'}, inplace=True)
    dta['t'] = np.arange(dta.shape[0])
    dta['Ly'] = dta['y'].shift(1)
    dta['Dy'] = dta['y'].diff(1)
    for j in range(1, k+1):
        dta[f'D{j}y'] = dta['Dy'].shift(j)    

    lags = '+'.join(dta.columns[-k:])

    alpha1values = pd.Series(0.0, index=dta.index[12:-12])

    for tau in alpha1values.index:
        dta['DL'] = (dta.index>tau).astype(int)
        modelo = ols('y ~ Ly + t + DL + ' + lags, dta).fit()
        alpha1values[tau] = ((modelo.params - 1)/modelo.bse)['Ly']

    tauhat, tval = alpha1values.idxmin(), alpha1values.min()
    dta['DL'] = (dta.index>tauhat).astype(int)
    modelo = ols('y ~ Ly + t + DL + ' + lags, dta).fit()

    return {r'$\hat{T}_B$':tauhat, r'$\alpha_1$': np.round(modelo.params['Ly'],3), r'$t$': np.round(tval,2)}



seriesA = ['lrgnp', 'lgnp', 'lpcrgnp', 'lip', 'lemp', 'lprgnp', 'lcpi', 'lwg', 'lm']
lags = [8,8,7,8,7,5,2,7,6]
variables = {'lrgnp':'Real GNP',
           'lgnp':'Nominal GNP',
           'lpcrgnp':'Real per capita GNP',
           'lip':'Industrial production',
           'lemp':'Employment',
           'lun':'Unemployment rate',
           'lprgnp':'GNP deflator',
           'lcpi':'Consumer prices',
           'lwg':'Wages',
           'lrwg':'Real wages',
           'lm':'Money stock',
           'lvel':'Velocity',
           'bnd':'Bond yield',
           'lsp500':'Common stock prices'}


temp = pd.DataFrame([ZivotAndrewsA(ser, k) for ser, k in zip(seriesA, lags)], index=seriesA)
temp.rename(index=variables)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mFileNotFoundError[0m                         Traceback (most recent call last)
[1;32m~\AppData\Local\Temp/ipykernel_22892/1831201705.py[0m in [0;36m<module>[1;34m[0m
[1;32m----> 1[1;33m [0mNP[0m [1;33m=[0m [0mpd[0m[1;33m.[0m[0mread_stata[0m[1;33m([0m[1;34m'datos/NelsonPlosserData.dta'[0m[1;33m,[0m [0mindex_col[0m[1;33m=[0m[1;34m'year'[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m      2[0m [0mNP[0m[1;33m.[0m[0mindex[0m [1;33m=[0m [0mNP[0m[1;33m.[0m[0mindex[0m[1;33m.[0m[0myear[0m[1;33m[0m[1;33m[0m[0m
[0;32m      3[0m [1;33m[0m[0m
[0;32m      4[0m [1;32mdef[0m [0mZivotAndrewsA[0m[1;33m([0m[0mserie[0m[1;33m,[0m [0mk[0m[1;33m=[0m[1;36m8[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m      5[0m     [0mdta[0m [1;33m=[0m [0mNP[0m[1;33m[[0m[1;33m[[0m[0mserie[0m[1;33m][0m[1;33m][0m[1;33m.[0m[0mdropna[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\ProgramData\Anaconda3\lib\site-packages\pandas\io\stata.py[0m in [0;36mread_stata[1;34m(filepath_or_buffer, convert_dates, convert_categoricals, index_col, convert_missing, preserve_dtypes, columns, order_categoricals, chunksize, iterator, compression, storage_options)[0m
[0;32m   1939[0m ) -> DataFrame | StataReader:
[0;32m   1940[0m [1;33m[0m[0m
[1;32m-> 1941[1;33m     reader = StataReader(
[0m[0;32m   1942[0m         [0mfilepath_or_buffer[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1943[0m         [0mconvert_dates[0m[1;33m=[0m[0mconvert_dates[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\ProgramData\Anaconda3\lib\site-packages\pandas\io\stata.py[0m in [0;36m__init__[1;34m(self, path_or_buf, convert_dates, convert_categoricals, index_col, convert_missing, preserve_dtypes, columns, order_categoricals, chunksize, compression, storage_options)[0m
[0;32m   1089[0m [1;33m[0m[0m
[0;32m   1090[0m         [0mself[0m[1;33m.[0m[0m_native_byteorder[0m [1;33m=[0m [0m_set_endianness[0m[1;33m([0m[0msys[0m[1;33m.[0m[0mbyteorder[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1091[1;33m         with get_handle(
[0m[0;32m   1092[0m             [0mpath_or_buf[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1093[0m             [1;34m"rb"[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\ProgramData\Anaconda3\lib\site-packages\pandas\io\common.py[0m in [0;36mget_handle[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[0;32m    709[0m         [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    710[0m             [1;31m# Binary mode[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 711[1;33m             [0mhandle[0m [1;33m=[0m [0mopen[0m[1;33m([0m[0mhandle[0m[1;33m,[0m [0mioargs[0m[1;33m.[0m[0mmode[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    712[0m         [0mhandles[0m[1;33m.[0m[0mappend[0m[1;33m([0m[0mhandle[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    713[0m [1;33m[0m[0m

[1;31mFileNotFoundError[0m: [Errno 2] No such file or directory: 'datos/NelsonPlosserData.dta'
FileNotFoundError: [Errno 2] No such file or directory: 'datos/NelsonPlosserData.dta'

